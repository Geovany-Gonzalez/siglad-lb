# -----------------------------
# NGINX open-source - Load Balancer SIGLAD (Render)
# -----------------------------

worker_processes auto;
events { worker_connections 1024; }

http {
  # --- Logs (incluye el upstream que respondió) ---
  log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
                   'status=$status bytes=$body_bytes_sent '
                   'rt=$request_time ref="$http_referer" ua="$http_user_agent" '
                   'upstream="$upstream_addr" ustatus="$upstream_status" '
                   'urt="$upstream_response_time" host="$host"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  # Básicos
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;

  # Render cambia IPs => resolver con SNI
  resolver 1.1.1.1 1.0.0.1 valid=30s ipv6=off;

  # ---- Upstreams (50/50 por peso =1:1) ----
  upstream siglad_fronts {
    server siglad-proyecto.onrender.com:443    weight=1 max_fails=1 fail_timeout=10s;
    server siglad-proyectoii.onrender.com:443  weight=1 max_fails=1 fail_timeout=10s;
    keepalive 16;
  }

  server {
    # Render expone el contenedor en $PORT (nosotros 8080)
    listen 8080;
    server_name _;

    # Salud para Render
    location = /_lb/health { return 200 'OK'; add_header Content-Type text/plain; }

    location / {
      proxy_pass https://siglad_fronts;
      proxy_ssl_server_name on;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # Failover rápido
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;

      proxy_connect_timeout 3s;
      proxy_read_timeout    15s;
      proxy_send_timeout    15s;

      # Aquí te digo QUIÉN atendió (lo ves en cabeceras de respuesta)
      add_header X-Chosen-Upstream $upstream_addr always;
    }

    # Endpoint sencillo para “probar” (devuelve HTML del front + cabecera X-Chosen-Upstream)
    location = /_lb/which {
      proxy_pass https://siglad_fronts;
      proxy_ssl_server_name on;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;

      proxy_connect_timeout 3s;
      proxy_read_timeout    15s;
      proxy_send_timeout    15s;

      add_header X-Chosen-Upstream $upstream_addr always;
    }
  }
}
