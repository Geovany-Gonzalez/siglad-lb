# NGINX OSS - SIGLAD LB (Render)

worker_processes auto;
events { worker_connections 1024; }

http {
  # Logs con dato de balanceo
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  'status=$status bytes=$body_bytes_sent '
                  'rt=$request_time ref="$http_referer" ua="$http_user_agent" '
                  'chosen="$backend" fallback="$is_fallback"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;

  # DNS (Render cambia IPs)
  resolver 1.1.1.1 1.0.0.1 valid=30s ipv6=off;

  # 50/50: partimos por request_id (estable y uniforme)
  split_clients "${request_id}" $backend {
    50% "siglad-proyecto.onrender.com";
    *   "siglad-proyectoii.onrender.com";
  }

  # Si el elegido falla (502/504), vamos al otro
  map $backend $other_backend {
    "siglad-proyecto.onrender.com"   "siglad-proyectoii.onrender.com";
    default                          "siglad-proyecto.onrender.com";
  }

  # Marcador para saber si caímos al fallback
  map $request_uri $is_fallback { default ""; }

  server {
    # Render publica el contenedor en $PORT (usa 8080)
    listen 8080;
    server_name _;

    # Health para Render
    location = /_lb/health { return 200 'OK'; add_header Content-Type text/plain; }

    # Debug rápido: muestra qué backend se eligió
    location = /_lb/which {
      default_type text/plain;
      return 200 "$backend\n";
    }

    # Tráfico normal
    location / {
      # TLS a dominio real + SNI correcto
      proxy_pass              https://$backend;
      proxy_ssl_server_name   on;
      proxy_ssl_name          $backend;

      # Host hacia el frontend
      proxy_set_header Host              $backend;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # Si el backend elegido devuelve 502/504, saltamos a @fallback
      error_page 502 504 = @fallback;

      proxy_connect_timeout 3s;
      proxy_read_timeout    15s;
      proxy_send_timeout    15s;

      # Para que lo veas en DevTools / curl -I
      add_header X-Chosen-Upstream $backend always;
    }

    # Fallback automático al otro dominio si el primero falla
    location @fallback {
      proxy_pass              https://$other_backend;
      proxy_ssl_server_name   on;
      proxy_ssl_name          $other_backend;

      proxy_set_header Host              $other_backend;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      proxy_connect_timeout 3s;
      proxy_read_timeout    15s;
      proxy_send_timeout    15s;

      add_header X-Chosen-Upstream $other_backend always;
      add_header X-Fallback        "1"              always;

      # marca para logs
      set $is_fallback "1";
    }
  }
}
