worker_processes auto;
error_log  /dev/stderr notice;
pid        off;

events { worker_connections 1024; }

http {
  # Logs con datos del upstream
  log_format main
    '$remote_addr - - [$time_local] "$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    'rt=$request_time urt=$upstream_response_time ustatus=$upstream_status '
    'uaddr=$upstream_addr uhost=$host';
  access_log /dev/stdout main;

  include       mime.types;
  default_type  application/octet-stream;

  # DNS para *.onrender.com
  resolver 1.1.1.1 1.0.0.1 valid=300s ipv6=off;

  # ---------- BALANCEO 80/20 ----------
  # 80% a tu sitio (proyectoii) y 20% al otro (proyecto)
  split_clients "${remote_addr}${request_method}${request_uri}" $backend_host {
    80% "siglad-proyectoii.onrender.com";
    *   "siglad-proyecto.onrender.com";
  }

  # Host header/SNI hacia el backend
  map $backend_host $host_hdr { default $backend_host; }

  # WebSockets (por si acaso)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ""      close;
  }

  server {
    listen 8080;

    # Headers de diagnóstico (los verás en Network/Headers)
    add_header X-LB              "siglad-nginx"          always;
    add_header X-Upstream-Host   $backend_host           always;
    add_header X-Upstream-Addr   $upstream_addr          always;
    add_header X-Upstream-Status $upstream_status        always;
    add_header X-Upstream-Time   $upstream_response_time always;

    # Endpoints de salud
    location = /_lb/health { add_header Content-Type text/plain; return 200 "ok\n"; }
    location = /_lb/which  { add_header Content-Type text/plain; return 200 "$backend_host\n"; }
    location = /_lb/status { stub_status; access_log off; }

    # --------- Proxy principal (sirve el frontend elegido) ---------
    location / {
      proxy_pass https://$backend_host/;

      # Headers estándar
      proxy_set_header Host              $host_hdr;   # Render necesita el host real
      proxy_set_header X-Forwarded-Host  $host;       # host público (LB)
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

      # TLS hacia Render con SNI correcto
      proxy_ssl_server_name on;
      proxy_ssl_name        $backend_host;

      # Reintentos/timeout (si un origen falla, prueba el otro)
      proxy_next_upstream       error timeout http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;
      proxy_connect_timeout 5s;
      proxy_read_timeout    30s;
      proxy_send_timeout    30s;

      # Reescribe cookies/redirects para que TODO quede en el host del LB
      proxy_cookie_domain siglad-proyecto.onrender.com   $host;
      proxy_cookie_domain siglad-proyectoii.onrender.com $host;
      proxy_redirect      https://siglad-proyecto.onrender.com/    /;
      proxy_redirect      https://siglad-proyectoii.onrender.com/  /;

      # WebSockets
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      # (opcional) subir archivos grandes
      # client_max_body_size 20m;
    }
  }
}
