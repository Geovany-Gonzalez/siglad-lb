worker_processes auto;
error_log  /dev/stderr notice;
pid        off;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;

  log_format main
    '$remote_addr - - [$time_local] "$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    'rt=$request_time urt=$upstream_response_time ustatus=$upstream_status '
    'uaddr=$upstream_addr uhost=$host';

  access_log /dev/stdout main;

  resolver 1.1.1.1 1.0.0.1 valid=300s ipv6=off;

  # 1) Elección con pesos (NO por URI; solo una vez)
  split_clients "${remote_addr}${http_user_agent}" $lb_choice {
    80% "siglad-proyectoii.onrender.com";
    *   "siglad-proyecto.onrender.com";
  }

  # 2) Si ya hay cookie, úsala; si no, usa la elección y pon cookie
  map $cookie_lb_upstream $backend_host {
    default $cookie_lb_upstream;
    ""      $lb_choice;
  }

  # Para TLS SNI/Host correcto hacia Render
  map $backend_host $host_hdr { default $backend_host; }
  map $http_upgrade $connection_upgrade { default upgrade; "" close; }

  server {
    listen 8080;

    # diag
    location = /_lb/which  { add_header Content-Type text/plain; return 200 "$backend_host\n"; }
    location = /_lb/health { add_header Content-Type text/plain; return 200 "ok\n"; }

    location / {
      # fija cookie si falta (validez 1 día)
      if ($cookie_lb_upstream = "") {
        add_header Set-Cookie "lb_upstream=$backend_host; Path=/; HttpOnly; SameSite=Lax; Max-Age=86400" always;
      }

      proxy_pass https://$backend_host;

      proxy_set_header Host              $host_hdr;   # Host del sitio en Render
      proxy_set_header X-Forwarded-Host  $host;       # dominio público del LB
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;

      proxy_ssl_server_name on;
      proxy_ssl_name        $backend_host;

      proxy_connect_timeout 5s;
      proxy_read_timeout    30s;
      proxy_send_timeout    30s;

      # WebSockets OK
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
    }
  }
}
